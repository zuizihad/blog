// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blog.Models;

namespace blog.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("blog.Models.BlogCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("categoryName")
                        .IsRequired();

                    b.HasKey("categoryId");

                    b.ToTable("blogCategories");
                });

            modelBuilder.Entity("blog.Models.Comments", b =>
                {
                    b.Property<int>("authorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("blogId");

                    b.Property<string>("commentAuthor")
                        .IsRequired();

                    b.Property<string>("commentAuthorEmail")
                        .IsRequired();

                    b.Property<DateTime>("commentDate");

                    b.Property<string>("commentDescription")
                        .IsRequired();

                    b.Property<bool>("isHidden");

                    b.HasKey("authorId");

                    b.HasIndex("blogId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("blog.Models.myBlog", b =>
                {
                    b.Property<int>("blogId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("blogCategorycategoryId");

                    b.Property<DateTime>("blogDateTime");

                    b.Property<string>("blogDescription")
                        .IsRequired();

                    b.Property<string>("blogTitle")
                        .IsRequired();

                    b.Property<string>("imagePath");

                    b.Property<bool>("isPublished");

                    b.HasKey("blogId");

                    b.HasIndex("blogCategorycategoryId");

                    b.ToTable("myBlogs");
                });

            modelBuilder.Entity("blog.Models.Comments", b =>
                {
                    b.HasOne("blog.Models.myBlog", "blog")
                        .WithMany("blogComments")
                        .HasForeignKey("blogId");
                });

            modelBuilder.Entity("blog.Models.myBlog", b =>
                {
                    b.HasOne("blog.Models.BlogCategory", "blogCategory")
                        .WithMany()
                        .HasForeignKey("blogCategorycategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
